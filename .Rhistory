offense = mean(avgOffYds),
defense = mean(avgDefYds)
)
ggplot() +
geom_point(
data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, size=wins, color="red")
) +
geom_vline(xintercept = avgs$offense) +
geom_hline(yintercept = avgs$defense) +
geom_text_repel(data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, label=`year(Date)`)) +
labs(title="A Shift To Offense Since Locksley's Inception", subtitle="4 of Locksley's 5 seasons leading the Terps have seen above average offensive production" , caption="Source: NCAA Data 2011-2023 | By Sashwat Venkatesh")  + theme_minimal()
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
suppressMessages(library(ggplot2))
suppressMessages(library(ggrepel))
suppressMessages(data <- read_csv("https://thescoop.org/sports-data-files/footballlogs1123.csv"))
maryland <- data |> filter(TeamFull == "Maryland Terrapins")
maryland <- maryland |>
mutate(totalYds = maryland$PassingYds + maryland$RushingYds,
defTotalYds = maryland$DefPassingYds + maryland$DefRushingYds
)
maryland$Result[grepl("W", maryland$Result)] <- 1
maryland$Result[grepl("L", maryland$Result)] <- 0
maryland$Result <- as.integer(maryland$Result)
marylandByYear <- maryland |>
group_by(year(Date)) |>
summarise(avgOffYds = sum(totalYds)/sum(OffensivePlays), avgDefYds = sum(defTotalYds)/sum(DefPlays), wins = sum(Result))
avgs <- marylandByYear |>
ungroup() |>
summarise(
offense = mean(avgOffYds),
defense = mean(avgDefYds)
)
ggplot() +
geom_point(
data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, size=wins, color="red")
) +
geom_vline(xintercept = avgs$offense) +
geom_hline(yintercept = avgs$defense) +
geom_text_repel(data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, label=`year(Date)`)) +
labs(title="A Shift To Offense Since Locksley's Inception", subtitle="4 of Locksley's 5 seasons leading the Terps have seen above average offensive production" , caption="Source: NCAA Data 2011-2023 | By Sashwat Venkatesh")  + theme_minimal()
suppressWarnings(
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
suppressWarnings(
library(tidyverse)
library(lubridate)
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
suppressMessages(library(ggplot2))
suppressMessages(library(ggrepel))
suppressMessages(data <- read_csv("https://thescoop.org/sports-data-files/footballlogs1123.csv"))
maryland <- data |> filter(TeamFull == "Maryland Terrapins")
maryland <- maryland |>
mutate(totalYds = maryland$PassingYds + maryland$RushingYds,
defTotalYds = maryland$DefPassingYds + maryland$DefRushingYds
)
maryland$Result[grepl("W", maryland$Result)] <- 1
maryland$Result[grepl("L", maryland$Result)] <- 0
maryland$Result <- as.integer(maryland$Result)
marylandByYear <- maryland |>
group_by(year(Date)) |>
summarise(avgOffYds = sum(totalYds)/sum(OffensivePlays), avgDefYds = sum(defTotalYds)/sum(DefPlays), wins = sum(Result))
avgs <- marylandByYear |>
ungroup() |>
summarise(
offense = mean(avgOffYds),
defense = mean(avgDefYds)
)
ggplot() +
geom_point(
data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, size=wins, color="red")
) +
geom_vline(xintercept = avgs$offense) +
geom_hline(yintercept = avgs$defense) +
geom_text_repel(data=marylandByYear, aes(x=avgOffYds, y=avgDefYds, label=`year(Date)`)) +
labs(title="A Shift To Offense Since Locksley's Inception", subtitle="4 of Locksley's 5 seasons leading the Terps have seen above average offensive production" , caption="Source: NCAA Data 2011-2023 | By Sashwat Venkatesh")  + theme_minimal()
suppressMessages(library(tidyverse))
clubs <- read_csv("~/Desktop/TransferMarkt Data/clubs.csv")
players <- read_csv("~/Desktop/TransferMarkt Data/players.csv")
player_valuations<- read_csv("~/Desktop/TransferMarkt Data/player_valuations.csv")
games <- read_csv("~/Desktop/TransferMarkt Data/games.csv")
game_events <- read_csv("~/Desktop/TransferMarkt Data/game_events.csv")
comps <- read_csv("~/Desktop/TransferMarkt Data/competitions.csv")
club_games <- read_csv("~/Desktop/TransferMarkt Data/club_games.csv")
appearances <- read_csv("~/Desktop/TransferMarkt Data/appearances.csv")
View(player_valuations)
head(game_events)
club_games
player_stats <-function(name, year) {
df <- merge(appearances, games, by="game_id", all.x=TRUE)
#nrow(df)
df$goals_for <- ifelse(df$home_club_id == df$player_club_id, df$home_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$away_club_goals, NA))
df$goals_against <- ifelse(df$home_club_id == df$player_club_id, df$away_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$home_club_goals, NA))
df$clean_sheet <- ifelse(df$goals_against == 0, 1,
ifelse(df$goals_against > 0, 0, NA))
if (year == "all") {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name)
}
else {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name) |> filter(season == year)
}
df
}
messi <- player_stats("Lionel Messi", "all")
#messivals <- merge(messi, player_valuations, by="player_id", all.x = TRUE)
messisvalue <- player_valuations |> filter(player_id == 28003)
library(ggplot2)
ggplot(messisvalue, aes(x=messisvalue$datetime, y=messisvalue$market_value_in_eur)) +
geom_line()
cr7value <- player_valuations |> filter(player_id == 8198)
library(ggplot2)
ggplot(cr7value, aes(x=cr7value$datetime, y=cr7value$market_value_in_eur)) +
geom_line()
ggplot(messi, aes(x=messi$season, y=(messi$g +messi$a) )) +
geom_line()
cr7 <- player_stats('Cristiano Ronaldo', "all")
cr7
ggplot() +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="red") +
geom_point() +
geom_line(data=messi, aes(x=messi$season, y=(messi$g +messi$a) ), color="lightblue") +
xlab("Season") +
ylab("G + A")
nb <- player_stats('Nicolò Barella', "all")
nb
#Marc-Andre ter Stegen is a German goalkeeper who plays for FC Barcelona,
#so I wanted to see what his clean sheets stat looked like over time.
# His name also contains special characters and a hypen, so this is
# something I'll have to take note of. I can only presume this will continue
# to be the case for players like Danish centerback Simon Kjae(æ)r
mats<- player_stats('Marc-André ter Stegen', "all")
mats
View(cr7)
View(messi)
temp <- player_valuations |> filter(player_id == 8198 || player_id == 28003)
temp <- player_valuations |> filter(player_id == 8198)
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "07")
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06")
temp
temp <- player_valuations |> filter(player_id == 8198 | player_id = 28003) |> filter(format(date, "%m") == "06")
temp <- player_valuations |> filter(player_id == 8198 | player_id == 28003) |> filter(format(date, "%m") == "06")
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06" | format(date, "%m") == "06")
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06" | format(date, "%m") == "07")
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06" | format(date, "%m") == "07") |> arrange(date)
temp
View(temp)
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06" | format(date, "%m") == "07" | format(date, "%m") == "08") |> arrange(date)
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%y") == "2008") |> arrange(date)
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "08") |> arrange(date)
temp
temp <- player_valuations |> filter(player_id == 8198) |> arrange(date)
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "06" | format(date, "%m") == "07" | format(date, "%m") == "08") |> arrange(date)
temp
View(temp)
temp <- player_valuations |> filter(player_id == 8198) |>  arrange(date)
temp
temp <- player_valuations |> filter(player_id == 8198) |> filter(format(date, "%m") == "05" | format(date, "%m") == "06" | format(date, "%m") == "07" | format(date, "%m") == "08") |>arrange(date)
temp
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red")
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red") +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="black")
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red") +
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red")
temp |>
mutate(year = lubridate::year(date)) |>  # Create a new column with the year
group_by(year) |>
filter(date == max(date)) |>
select(-year)
temp
temp <- player_valuations |>
filter(player_id == 8198) |> filter(format(date, "%m") == "05" | format(date, "%m") == "06" | format(date, "%m") == "07" | format(date, "%m") == "08") |>
arrange(date)
temp <- temp |>
mutate(year = lubridate::year(date)) |>  # Create a new column with the year
group_by(year) |>
filter(date == max(date)) |>
select(-year)
temp
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red")
View(temp)
View(cr7)
temp |>
mutate(year = lubridate::year(date)) |>  # Create a new column with the year
group_by(year) |>
filter(date == max(date))
temp
testtemp <- merge(cr7, temp)
View(testtemp)
testtemp <- merge(cr7, temp, by.x=Season, by.y=year)
testtemp <- merge(cr7, temp, by.x=season, by.y=year)
testtemp <- merge(cr7, temp, by.x=cr7$season, by.y=year)
for (row in 1:nrow(cr7)) {
print(cr7[row, "g"])
}
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
}
}
}
arr1 <- c()
arr2 <- c()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
append(arr1, cr7[row1, "g"])
append(arr2, temp[row2, "market_value_in_eur"])
}
}
}
print(arr1)
arr1 <- 1:2
arr2 <- c()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
append(arr1, cr7[row1, "g"])
append(arr2, temp[row2, "market_value_in_eur"])
}
}
}
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
}
}
}
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
print(cr7[row1, "season"] + 1)
}
}
}
t <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
print(cr7[row1, "season"] + 1)
append(t, cr7[row1, "g"])
}
}
}
t <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
print(cr7[row1, "season"] + 1)
t <- append(t, cr7[row1, "g"])
}
}
}
View(t)
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
print(cr7[row1, "g"])
print(temp[row2, "market_value_in_eur"])
print(cr7[row1, "season"] + 1)
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = t, value = u)
ggplot() +
geom_line(data = df, aes(x=df$goals, y=df$value), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = t, value = u)
ggplot() +
geom_line(data = df, aes(x=goals, y=value), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = t, value = u)
ggplot() +
geom_line(data = df, aes(x=t, y=u), color="red")
View(df)
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(t, u)
ggplot() +
geom_line(data = df, aes(x=t, y=u), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = unlist(t), value=unlist(u))
ggplot() +
geom_line(data = df, aes(x=goals, y=value), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = unlist(t), value=unlist(u))
ggplot() +
geom_scatter(data = df, aes(x=goals, y=value), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = unlist(t), value=unlist(u))
ggplot() +
geom_plot(data = df, aes(x=goals, y=value), color="red")
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = unlist(t), value=unlist(u))
ggplot() +
geom_point(data = df, aes(x=goals, y=value), color="red")
suppressMessages(library(tidyverse))
clubs <- read_csv("~/Desktop/TransferMarkt Data/clubs.csv")
players <- read_csv("~/Desktop/TransferMarkt Data/players.csv")
player_valuations<- read_csv("~/Desktop/TransferMarkt Data/player_valuations.csv")
games <- read_csv("~/Desktop/TransferMarkt Data/games.csv")
game_events <- read_csv("~/Desktop/TransferMarkt Data/game_events.csv")
comps <- read_csv("~/Desktop/TransferMarkt Data/competitions.csv")
club_games <- read_csv("~/Desktop/TransferMarkt Data/club_games.csv")
appearances <- read_csv("~/Desktop/TransferMarkt Data/appearances.csv")
head(game_events)
club_games
player_stats <-function(name, year) {
df <- merge(appearances, games, by="game_id", all.x=TRUE)
df$goals_for <- ifelse(df$home_club_id == df$player_club_id, df$home_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$away_club_goals, NA))
df$goals_against <- ifelse(df$home_club_id == df$player_club_id, df$away_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$home_club_goals, NA))
df$clean_sheet <- ifelse(df$goals_against == 0, 1,
ifelse(df$goals_against > 0, 0, NA))
if (year == "all") {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name)
}
else {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name) |> filter(season == year)
}
df
}
messi <- player_stats("Lionel Messi", "all")
#messivals <- merge(messi, player_valuations, by="player_id", all.x = TRUE)
messisvalue <- player_valuations |> filter(player_id == 28003)
library(ggplot2)
ggplot(messisvalue, aes(x=messisvalue$datetime, y=messisvalue$market_value_in_eur)) +
geom_line()
cr7value <- player_valuations |> filter(player_id == 8198)
library(ggplot2)
ggplot(cr7value, aes(x=cr7value$datetime, y=cr7value$market_value_in_eur)) +
geom_line()
ggplot(messi, aes(x=messi$season, y=(messi$g +messi$a) )) +
geom_line()
cr7 <- player_stats('Cristiano Ronaldo', "all")
cr7
ggplot() +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="red") +
geom_point() +
geom_line(data=messi, aes(x=messi$season, y=(messi$g +messi$a) ), color="lightblue") +
xlab("Season") +
ylab("G + A")
nb <- player_stats('Nicolò Barella', "all")
nb
#Marc-Andre ter Stegen is a German goalkeeper who plays for FC Barcelona,
#so I wanted to see what his clean sheets stat looked like over time.
# His name also contains special characters and a hypen, so this is
# something I'll have to take note of. I can only presume this will continue
# to be the case for players like Danish centerback Simon Kjae(æ)r
mats<- player_stats('Marc-André ter Stegen', "all")
mats
temp <- player_valuations |>
filter(player_id == 8198) |> filter(format(date, "%m") == "05" | format(date, "%m") == "06" | format(date, "%m") == "07" | format(date, "%m") == "08") |>
arrange(date)
temp <- temp |>
mutate(year = lubridate::year(date)) |>  # Create a new column with the year
group_by(year) |>
filter(date == max(date)) |>
select(-year)
temp
ggplot() +
geom_line(data = temp, aes(x=temp$date, y=temp$market_value_in_eur), color="red")
temp |>
mutate(year = lubridate::year(date)) |>  # Create a new column with the year
group_by(year) |>
filter(date == max(date))
temp
t <- list()
u <- list()
for (row1 in 1:nrow(cr7)) {
for (row2 in 1:nrow(temp)) {
if (temp[row2, "year"] == cr7[row1, "season"] + 1) {
t <- append(t, cr7[row1, "g"])
u <- append(u, temp[row2, "market_value_in_eur"])
}
}
}
df <- data.frame(goals = unlist(t), value=unlist(u))
ggplot() +
geom_point(data = df, aes(x=goals, y=value), color="red")
