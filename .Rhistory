ifelse(df$goals_against > 0, 0, NA))
if (year == "all") {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name)
}
else {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name) |> filter(season == year)
}
df
}
messi <- player_stats("Lionel Messi", "all")
View(players)
View(players)
View(players)
#messivals <- merge(messi, player_valuations, by="player_id", all.x = TRUE)
messisvalue <- player_valuations |> filter(player_id == 28003)
library(ggplot2)
ggplot(messisvalue, aes(x=messisvalue$datetime, y=messisvalue$market_value_in_eur)) +
geom_line()
cr7value <- player_valuations |> filter(player_id == 8198)
library(ggplot2)
ggplot(cr7value, aes(x=cr7value$datetime, y=cr7value$market_value_in_eur)) +
geom_line()
ggplot(messi, aes(x=messi$season, y=(messi$g +messi$a) )) +
geom_line()
cr7 <- player_stats('Cristiano Ronaldo', "all")
cr7
ggplot() +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="red") +
geom_point() +
geom_line(data=messi, aes(x=messi$season, y=(messi$g +messi$a) ), color="lightblue") +
xlab("Season") +
ylab("G + A")
nb <- player_stats('Nicolò Barella', "all")
nb
#Marc-Andre ter Stegen is a German goalkeeper who plays for FC Barcelona,
#so I wanted to see what his clean sheets stat looked like over time.
# His name also contains special characters and a hypen, so this is
# something I'll have to take note of. I can only presume this will continue
# to be the case for players like Danish centerback Simon Kjae(æ)r
mats<- player_stats('Marc-André ter Stegen', "all")
mats
rm(list=ls())
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/logs1520.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
View(logs)
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
View(winlosslogs)
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(Team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(Team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
ggplot() + geom_point(data=goals_wins, aes(x=total_goals, y=wins))
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm")
fit <- lm(wins ~ total_goals, data = goals_wins)
summary(fit)
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm") +
geom_point(data=umd, aes(x=total_goals, y=wins), color="red")
fouls_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_fouls = sum(fouls)
) |>
na.omit()
ggplot() +
geom_point(data=fouls_wins, aes(x=total_fouls, y=wins)) +
geom_smooth(data=fouls_wins, aes(x=total_fouls, y=wins), method="lm")
foulsfit <- lm(wins ~ total_fouls, data = fouls_wins)
summary(foulsfit)
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
ggplot() + geom_point(data=goals_wins, aes(x=total_goals, y=wins))
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm")
fit <- lm(wins ~ total_goals, data = goals_wins)
summary(fit)
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm") +
geom_point(data=umd, aes(x=total_goals, y=wins), color="red")
fouls_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_fouls = sum(fouls)
) |>
na.omit()
ggplot() +
geom_point(data=fouls_wins, aes(x=total_fouls, y=wins)) +
geom_smooth(data=fouls_wins, aes(x=total_fouls, y=wins), method="lm")
foulsfit <- lm(wins ~ total_fouls, data = fouls_wins)
summary(foulsfit)
suppressMessages(library(tidyverse))
rm(list=ls())
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
usethis::edit_r_environ()
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = [2019, 2020, 2021, 2022, 2023])
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))
View(pbp)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
View(threeandsix)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(
playtype = play_type,
instances = sum(n())
)
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(
play = play_type,
instances = n()
)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
play = play_type,
instances = n()
)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
)
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix, na.rm=TRUE)-min(threeandsix, na.rm=TRUE))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix$yards_gained, na.rm=TRUE)-min(threeandsix$yards_gained, na.rm=TRUE))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type = "Rush")
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix$yards_gained, na.rm=TRUE)-min(threeandsix$yards_gained, na.rm=TRUE))
View(threeandsixruns)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsixruns$yards_gained, na.rm=TRUE)-min(threeandsixruns$yards_gained, na.rm=TRUE))
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
playtypes
View(playtypes)
View(threeandsix)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6) |> na.omit()
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
playtypes
library(devtools)
install_github("dwillis/SportsDataTutorials", force=TRUE)
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))
library(ggplot)
library(ggplot)
install.packages(ggplot)
install.package("ggplot")
install.packages("ggplot")
library(ggplot2)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
View(threeandsixruns)
View(threeandsixruns)
successRuns <- threeandsixruns |> filter(yards_gained >= 6)
successRuns
successRuns <- threeandsixruns |> filter(yards_gained >= 6)
successRuns <- successRuns |> group_by(play_type) |> summarise(instances=n())
successRuns
View(threeandsixruns)
View(threeandsixruns)
threeandsixrunTeams <- threeandsixruns |> group_by(pos_team) |> summarise(instances = n())
threeandsixrunTeams
threeandsixrunTeams <- threeandsixruns |> group_by(pos_team) |> summarise(instances = n()) |> arrange(desc(instances))
threeandsixrunTeams
View(threeandsixrunTeams)
testtest <- threeandsix |> group_by(pos_team, play_type) |> summarise(instances = n())
testtest
testtest <- threeandsix |> group_by(pos_team, play_type) |> summarise(instances = n()) |> filter(pos_team == "Maryland")
testtest
threeandsixUMD <- threeandsix |> group_by(pos_team, play_type) |> summarise(instances = n()) |> filter(pos_team == "Maryland")
threeandsixUMD
testtest <- threeandsixruns |> filter(def_pos_team == "Illinois") |> filter(yards_gained >= 6)
testtest
testtest <- threeandsixruns |> filter(def_pos_team == "Illinois") |> filter(yards_gained >= 6)
testtest
testtest <- threeandsixruns |> filter(year==2023) |> filter(def_pos_team == "Illinois") |> filter(yards_gained >= 6)
testtest
View(threeandsix)
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type)
filter(def_pos_team == "Illinois") |>
filter(yards_gained >= 6)
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type)
testtest
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(def_pos_team == "Illinois") |>
filter(yards_gained >= 6)
testtest
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6)
testtest
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
testtest
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n()) |>
group_by(def_pos_team)
testtest
testtest <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n()) |>
group_by(def_pos_team)
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n()) |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum())
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n()) |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = n())
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
testtest2 <- testtest|>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(testtest$instances))
testtest2
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
testtest
testtest <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- testtest |> group_by(def_pos_team) |> summarise(conversions = sum(instances))
final
temp <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |> group_by(def_pos_team) |> summarise(conversions = sum(instances))
final
temp <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |> group_by(def_pos_team) |> summarise(conversions = sum(instances)) |> arrange(desc(conversions))
final
temp <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(instances)) |>
arrange(desc(conversionsAllowed))
final
temp <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(instances)) |>
arrange(desc(conversionsAllowed))
final
temp <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(instances)) |>
arrange(desc(conversionsAllowed))
final
temp <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final <- temp |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(instances)) |>
arrange(desc(conversionsAllowed))
final
temp1 <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final1 <- temp1 |>
group_by(def_pos_team) |>
summarise(conversionsAllowed = sum(instances)) |>
arrange(desc(conversionsAllowed))
final1
temp2 <- threeandsixruns |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final2 <- temp2 |>
group_by(def_pos_team) |>
summarise(conversionsAllowedFromRun = sum(instances)) |>
arrange(desc(conversionsAllowedFromRun))
final2
suppressMessages(
temp1 <- threeandsix |>
filter(year==2023) |>
group_by(def_pos_team, play_type) |>
filter(yards_gained >= 6) |>
summarise(instances = n())
final1 <- temp1 |>
