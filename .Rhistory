}
df
}
messi <- player_stats("Lionel Messi", "all")
#messivals <- merge(messi, player_valuations, by="player_id", all.x = TRUE)
messisvalue <- player_valuations |> filter(player_id == 28003)
library(ggplot2)
ggplot(messisvalue, aes(x=messisvalue$datetime, y=messisvalue$market_value_in_eur)) +
geom_line()
cr7value <- player_valuations |> filter(player_id == 8198)
library(ggplot2)
ggplot(cr7value, aes(x=cr7value$datetime, y=cr7value$market_value_in_eur)) +
geom_line()
ggplot(messi, aes(x=messi$season, y=(messi$g +messi$a) )) +
geom_line()
cr7 <- player_stats('Cristiano Ronaldo', "all")
cr7
ggplot() +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="red") +
geom_point() +
geom_line(data=messi, aes(x=messi$season, y=(messi$g +messi$a) ), color="lightblue") +
xlab("Season") +
ylab("G + A")
nb <- player_stats('Nicolò Barella', "all")
nb
mats<- player_stats('Marc-André ter Stegen', "all")
mats
View(players)
install.packages("ggalt")
library(tidyverse)
volleyball <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2023.csv")
head(volleyball)
vb2 <- volleyball |> select(team, opponent, result, team_score, opponent_score, s, kills, errors, digs, defensive_kills, defensive_errors, defensive_digs)
head(vb2)
vb3 <- vb2 |> group_by(team) |> summarise(
avgSets = mean(s),
avgKills = mean(kills),
avgErrors = mean(errors),
avgDigs = mean(digs),
avgDefKills = mean(defensive_kills),
avgDefErrors = mean(defensive_errors),
avgDefDigs = mean(defensive_digs))
head(vb3)
vb4 <- vb3 |>
mutate(
zScoreSets = as.numeric(scale(avgSets, center = TRUE, scale = TRUE)) * -1,
zScoreKills = as.numeric(scale(avgKills, center = TRUE, scale = TRUE)),
zScoreErrors = as.numeric(scale(avgErrors, center = TRUE, scale = TRUE)) * -1,
zScoreDigs = as.numeric(scale(avgDigs, center = TRUE, scale = TRUE)),
zScoreDefKills = as.numeric(scale(avgDefKills, center = TRUE, scale = TRUE)) * -1,
zScoreDefErrors = as.numeric(scale(avgDefErrors, center = TRUE, scale = TRUE)),
zScoreDefDigs = as.numeric(scale(avgDefDigs, center = TRUE, scale = TRUE)) * -1,
TotalZscore = zScoreSets + zScoreKills + zScoreErrors + zScoreDigs + zScoreDefKills + zScoreDefErrors + zScoreDefDigs
)
head(vb4)
vb6 <- vb4 |> select(team, avgKills, avgDefKills, TotalZscore, zScoreKills, zScoreDefKills) |> arrange(desc(avgKills))
vb6
vb5 <- vb4 |> select(team, TotalZscore) |> arrange(desc(TotalZscore))
top_n(vb5 |> arrange(desc(TotalZscore)), 10)
vb_players <- read_csv("https://raw.githubusercontent.com/Sports-Roster-Data/womens-volleyball/main/vb_rosters_2023_24.csv")
logs <- read_csv("data/ncaa_womens_volleyball_matchstats_2022.csv")
logs <- read_csv("https://dwillis.github.io/sports-data-files/ncaa_womens_volleyball_matchstats_2022.csv")
library(tidyverse)
library(ggalt)
logs <- read_csv("https://dwillis.github.io/sports-data-files/ncaa_womens_volleyball_matchstats_2022.csv")
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio State Buckeyes", "Michigan Wolverines", "Michigan State Spartans", "Penn State Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps")
errors <- logs |>
filter(team %in% big10) |>
group_by(team) |>
summarise(
total_errors = sum(errors),
opp_errors = sum(defensive_errors))
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio State Buckeyes", "Michigan Wolverines", "Michigan State Spartans", "Penn State Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps")
errors <- logs |>
filter(team %in% big10) |>
group_by(team) |>
summarise(
total_errors = sum(errors),
opp_errors = sum(defensive_errors))
big10
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio State Buckeyes", "Michigan Wolverines", "Michigan State Spartans", "Penn State Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps")
errors <- logs |>
filter(team %in% big10) |>
group_by(team) |>
summarise(
total_errors = sum(errors),
opp_errors = sum(defensive_errors))
errors
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=total_errors, xend=opp_errors)
)
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=opp_errors, xend=total_errors),
colour = "grey",
colour_x = "green",
colour_xend = "red")
View(logs)
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio State Buckeyes", "Michigan Wolverines", "Michigan State Spartans", "Penn St. Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps")
errors <- logs |>
filter(team %in% big10) |>
group_by(team) |>
summarise(
total_errors = sum(errors),
opp_errors = sum(defensive_errors))
errors
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=total_errors, xend=opp_errors)
)
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=opp_errors, xend=total_errors),
colour = "grey",
colour_x = "green",
colour_xend = "red")
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio St. Buckeyes", "Michigan Wolverines", "Michigan St. Spartans", "Penn St. Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps")
errors <- logs |>
filter(team %in% big10) |>
group_by(team) |>
summarise(
total_errors = sum(errors),
opp_errors = sum(defensive_errors))
errors
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=total_errors, xend=opp_errors)
)
ggplot() +
geom_dumbbell(
data=errors,
aes(y=team, x=opp_errors, xend=total_errors),
colour = "grey",
colour_x = "green",
colour_xend = "red")
ggplot() +
geom_dumbbell(
data=errors,
aes(y=reorder(team, opp_errors), x=opp_errors, xend=total_errors),
linewidth = 1,
color = "grey",
colour_x = "green",
colour_xend = "red") +
theme_minimal()
ggplot() +
geom_lollipop(
data=errors,
aes(y=team, x=opp_errors),
horizontal = TRUE
)
ggplot() +
geom_lollipop(
data=errors,
aes(y=reorder(team, opp_errors), x=opp_errors),
horizontal = TRUE
) + theme_minimal() +
labs(title = "Maryland, Rutgers force more errors", y="team")
ggplot() +
geom_lollipop(
data=errors,
aes(y=reorder(team, opp_errors), x=opp_errors),
horizontal = TRUE
) +
geom_lollipop(
data=md,
aes(y=team, x=opp_errors),
horizontal = TRUE,
color = "red"
) +
theme_minimal() +
labs(title = "Maryland forced the most errors among Big Ten teams", y="team")
md <- errors |> filter(team == "Maryland Terrapins, Terps")
ggplot() +
geom_lollipop(
data=errors,
aes(y=reorder(team, opp_errors), x=opp_errors),
horizontal = TRUE
) +
geom_lollipop(
data=md,
aes(y=team, x=opp_errors),
horizontal = TRUE,
color = "red"
) +
theme_minimal() +
labs(title = "Maryland forced the most errors among Big Ten teams", y="team")
rm(list=ls())
suppressMessages(library(tidyverse))
clubs <- read_csv("~/Desktop/TransferMarkt Data/clubs.csv")
players <- read_csv("~/Desktop/TransferMarkt Data/players.csv")
player_valuations<- read_csv("~/Desktop/TransferMarkt Data/player_valuations.csv")
games <- read_csv("~/Desktop/TransferMarkt Data/games.csv")
game_events <- read_csv("~/Desktop/TransferMarkt Data/game_events.csv")
comps <- read_csv("~/Desktop/TransferMarkt Data/competitions.csv")
club_games <- read_csv("~/Desktop/TransferMarkt Data/club_games.csv")
appearances <- read_csv("~/Desktop/TransferMarkt Data/appearances.csv")
head(game_events)
club_games
player_stats <-function(name, year) {
df <- merge(appearances, games, by="game_id", all.x=TRUE)
#nrow(df)
df$goals_for <- ifelse(df$home_club_id == df$player_club_id, df$home_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$away_club_goals, NA))
df$goals_against <- ifelse(df$home_club_id == df$player_club_id, df$away_club_goals,
ifelse(df$away_club_id == df$player_club_id, df$home_club_goals, NA))
df$clean_sheet <- ifelse(df$goals_against == 0, 1,
ifelse(df$goals_against > 0, 0, NA))
if (year == "all") {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name)
}
else {
df <- df |> group_by(player_id, player_name, season) |>
summarise(
g = sum(goals),
a = sum(assists),
cs = sum(clean_sheet),
) |> filter(player_name == name) |> filter(season == year)
}
df
}
messi <- player_stats("Lionel Messi", "all")
View(players)
View(players)
View(players)
#messivals <- merge(messi, player_valuations, by="player_id", all.x = TRUE)
messisvalue <- player_valuations |> filter(player_id == 28003)
library(ggplot2)
ggplot(messisvalue, aes(x=messisvalue$datetime, y=messisvalue$market_value_in_eur)) +
geom_line()
cr7value <- player_valuations |> filter(player_id == 8198)
library(ggplot2)
ggplot(cr7value, aes(x=cr7value$datetime, y=cr7value$market_value_in_eur)) +
geom_line()
ggplot(messi, aes(x=messi$season, y=(messi$g +messi$a) )) +
geom_line()
cr7 <- player_stats('Cristiano Ronaldo', "all")
cr7
ggplot() +
geom_line(data = cr7, aes(x=cr7$season, y=(cr7$g +cr7$a)), color="red") +
geom_point() +
geom_line(data=messi, aes(x=messi$season, y=(messi$g +messi$a) ), color="lightblue") +
xlab("Season") +
ylab("G + A")
nb <- player_stats('Nicolò Barella', "all")
nb
#Marc-Andre ter Stegen is a German goalkeeper who plays for FC Barcelona,
#so I wanted to see what his clean sheets stat looked like over time.
# His name also contains special characters and a hypen, so this is
# something I'll have to take note of. I can only presume this will continue
# to be the case for players like Danish centerback Simon Kjae(æ)r
mats<- player_stats('Marc-André ter Stegen', "all")
mats
rm(list=ls())
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/logs1520.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
View(logs)
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
View(winlosslogs)
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(Team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0)
)
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(Team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
ggplot() + geom_point(data=goals_wins, aes(x=total_goals, y=wins))
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm")
fit <- lm(wins ~ total_goals, data = goals_wins)
summary(fit)
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm") +
geom_point(data=umd, aes(x=total_goals, y=wins), color="red")
fouls_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_fouls = sum(fouls)
) |>
na.omit()
ggplot() +
geom_point(data=fouls_wins, aes(x=total_fouls, y=wins)) +
geom_smooth(data=fouls_wins, aes(x=total_fouls, y=wins), method="lm")
foulsfit <- lm(wins ~ total_fouls, data = fouls_wins)
summary(foulsfit)
library(tidyverse)
logs <- read_csv("https://dwillis.github.io/sports-data-files/fieldhockey22.csv")
winlosslogs <- logs |>
mutate(
winloss = case_when(
grepl("W", result) ~ 1,
grepl("L", result) ~ 0)
)
goals_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_goals = sum(goals)
) |> na.omit()
ggplot() + geom_point(data=goals_wins, aes(x=total_goals, y=wins))
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm")
fit <- lm(wins ~ total_goals, data = goals_wins)
summary(fit)
umd <- goals_wins |> filter(team == "Maryland Terrapins, Terps")
ggplot() +
geom_point(data=goals_wins, aes(x=total_goals, y=wins)) +
geom_smooth(data=goals_wins, aes(x=total_goals, y=wins), method="lm") +
geom_point(data=umd, aes(x=total_goals, y=wins), color="red")
fouls_wins <- winlosslogs |>
group_by(team) |>
summarise(
wins = sum(winloss),
total_fouls = sum(fouls)
) |>
na.omit()
ggplot() +
geom_point(data=fouls_wins, aes(x=total_fouls, y=wins)) +
geom_smooth(data=fouls_wins, aes(x=total_fouls, y=wins), method="lm")
foulsfit <- lm(wins ~ total_fouls, data = fouls_wins)
summary(foulsfit)
suppressMessages(library(tidyverse))
rm(list=ls())
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
usethis::edit_r_environ()
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = [2019, 2020, 2021, 2022, 2023])
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))
View(pbp)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
View(threeandsix)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(
playtype = play_type,
instances = sum(n())
)
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(
play = play_type,
instances = n()
)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
play = play_type,
instances = n()
)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
)
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix, na.rm=TRUE)-min(threeandsix, na.rm=TRUE))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix$yards_gained, na.rm=TRUE)-min(threeandsix$yards_gained, na.rm=TRUE))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type = "Rush")
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsix$yards_gained, na.rm=TRUE)-min(threeandsix$yards_gained, na.rm=TRUE))
View(threeandsixruns)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
print(max(threeandsixruns$yards_gained, na.rm=TRUE)-min(threeandsixruns$yards_gained, na.rm=TRUE))
View(playtypes)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
suppressMessages(library(tidyverse))
suppressMessages(library(cfbfastR))
pbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
playtypes
View(playtypes)
View(threeandsix)
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6) |> na.omit()
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n(),
ePointsAdded = mean(EPA)
) |> arrange(desc(instances))
playtypes
threeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)
threeandsixruns <- threeandsix |> filter(play_type == "Rush")
playtypes <- threeandsix |> group_by(play_type) |> summarise(
instances = n()
) |> arrange(desc(instances))
playtypes
library(devtools)
install_github("dwillis/SportsDataTutorials", force=TRUE)
