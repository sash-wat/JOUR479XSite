#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
#stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA)
)
View(md2)
sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA)
)
md2 |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA)
)
md2 |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(oppg = color_bar("#FF7276")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(oppg = color_bar("green")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(oppg = color_bar("blue")))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("red")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(season = color_bar("blue")))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv"))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(season = color_bar("blue")))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv"))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(season = color_bar("blue")))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("blue")))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv"))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("blue")))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressWarnings(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv"))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressWarnings(suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv")))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressWarnings(suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv")))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
t1 <- sh |> group_by(Season) |>summarise(
#ppg = mean(TeamScore),
oppg = mean(OpponentScore),
#fgg = mean(TeamFG),
#fgag = mean(TeamFGA),
#`three/g` = mean(Team3P),
#`threeA/g` = mean(Team3PA),
#fgpctg = fgg/fgag,
#trbsg = mean(TeamTotalRebounds - TeamOffRebounds),
stlg = mean(TeamSteals),
#blkg = mean(TeamBlocks),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("blue")))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
suppressMessages(library(tidyverse))
suppressMessages(library(ggplot2))
suppressMessages(library(formattable))
suppressWarnings(suppressMessages(bigdf <- read_csv("https://thescoop.org/sports-data-files/cbblogs1524.csv")))
suppressMessages(sh <- bigdf |> filter(TeamFull == "Seton Hall Pirates") |> filter(Date < "2022-07-01"))
suppressMessages(md2 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date > "2022-07-02"))
suppressMessages(md1 <- bigdf |> filter(TeamFull == "Maryland Terrapins") |> filter(Date < "2022-07-02"))
t1 <- sh |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("blue")))
t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t2, list(Season = color_bar("red")))
t1 <- sh |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("#ADD8E6")))
t1 <- sh |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t1, list(Season = color_bar("#0047AB")))
suppressWarnings(t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
))
formattable(t2, list(Season = color_bar("red")))
suppressWarnings(t2 <- md2 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
))
suppressWarnings(formattable(t2, list(Season = color_bar("red"))))
t3 <- md1 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t3, list(Season = color_bar("blue")))
t3 <- md1 |> group_by(Season) |>summarise(
oppg = mean(OpponentScore),
stlg = mean(TeamSteals),
tov = mean(OpponentTurnovers),
fta = mean(TeamFTA),
oppFTA = mean(OpponentFTA),
oppORBg = mean(OpponentOffRebounds)
)
formattable(t3, list(Season = color_bar("red")))
install.packages("hoopR")
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggalt)
library(hoopR)
nba_teamdashlineups(team_id = 1610612761)
rapsLineups = nba_teamdashlineups(team_id = 1610612761)[[2]]
rapsLineups
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggalt)
library(hoopR)
rapsLineups = nba_teamdashlineups(team_id = 1610612761)[[2]]
rapsLineups
rapsLineups <- rapsLineups |> mutate(MIN=as.numeric(), PLUS_MINUS=as.numeric, GP=as.numeric())
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggalt)
library(hoopR)
rapsLineups = nba_teamdashlineups(team_id = 1610612761)[[2]]
rapsLineups
rapsLineups <- rapsLineups |> mutate(MIN=as.numeric(MIN), PLUS_MINUS=as.numeric(PLUS_MINUS), GP=as.numeric(GP))
rapsLineups
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
formattable(rapsLineups)
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggalt)
library(hoopR)
rapsLineups = nba_teamdashlineups(team_id = 1610612761)[[2]]
rapsLineups
rapsLineups <- rapsLineups |> mutate(MIN=as.numeric(MIN), PLUS_MINUS=as.numeric(PLUS_MINUS), GP=as.numeric(GP))
rapsLineups
condensed <- rapsLineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
formattable(condensed)
condensed <- rapsLineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
formattable(condensed, cyl = color_text("blue", "blue"))
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggalt)
library(hoopR)
lineups = nba_teamdashlineups(team_id = 1610612761)[[2]]
lineups
lineups <- lineups |>
mutate(across(starts_with("GP"):ncol(lineups), as.numeric))
lineups
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
formattable(condensed, cyl = color_text("blue", "blue"))
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
condensed
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
formattable(condensed, style(color = "grey"))
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
formattable(condensed, style(color = "black"))
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
condensed
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
condensed |> arrange(desc(PLUS_MINUS))
condensed <- lineups |> select(GROUP_NAME, GP, MIN, PLUS_MINUS)
condensed |> arrange((PLUS_MINUS))
library(tidyverse)
library(ggbeeswarm)
library(ggrepel)
library(ggalt)
set.seed(1234)
playerswbb <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
players <- read_csv("https://raw.githubusercontent.com/dwillis/hhs-snapshots/main/data/player_totals_20231130.csv") |> filter(mp > 0)
players <- read_csv("https://raw.githubusercontent.com/dwillis/hhs-snapshots/main/data/player_totals_20231130.csv") |> filter(mp > 0)
ggplot() + geom_point(data=players, aes(x=mp, y=pts))
players <- read_csv("https://raw.githubusercontent.com/dwillis/hhs-snapshots/main/data/player_totals_20231130.csv") |> filter(mp > 0)
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black")
players <- read_csv("https://raw.githubusercontent.com/dwillis/hhs-snapshots/main/data/player_totals_20231130.csv") |> filter(mp > 0)
ggplot() + geom_point(data=players, aes(x=mp, y=pts))
topscorers <- players |> filter(pts > 175)
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black")
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black") +
geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=1, expand=1, colour="red")
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black") +
geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=0, expand=0, colour="red")
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black") +
geom_text(data=topscorers, aes(x=mp, y=pts, label=full_name), hjust = 0, vjust=1) +
geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=.5, expand=.03, colour="red")
ggplot() +
geom_point(data=players, aes(x=mp, y=pts), color="grey") +
geom_point(data=topscorers, aes(x=mp, y=pts), color="black") +
geom_encircle(data=topscorers, aes(x=mp, y=pts), s_shape=.5, expand=.03, colour="red") +
geom_text(aes(x=275, y=275, label="Top scorers")) +
labs(title="Caitlin Clark Alone At Top", subtitle="The Iowa star is by far the top scorer among all NCAA players", x="Minutes", y="Points") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 8),
plot.subtitle = element_text(size=10),
panel.grid.minor = element_blank()
)
