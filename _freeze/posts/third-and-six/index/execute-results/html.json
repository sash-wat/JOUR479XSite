{
  "hash": "1077285e934d41660aaddf1738a257ee",
  "result": {
    "markdown": "---\ntitle: \"Method Behind the Madness? A Deep Dive into Maryland's Playcalling Mindset\"\nauthor: \"Sashwat Venkatesh\"\ndate: \"2023-10-17\"\ncategories: [news]\nformat:\n  html:\n    code-fold: true\n---\n\nLate in their Homecoming game on Saturday, October 14th, the Maryland Terrapins seemed poised to win what was already an overcomplicated affair. A team that was 5-1, against a struggling 2-4 conference rival, with Maryland looking to build back some confidence and momentum after a 20 point loss in Columbus against Ohio State.\n\nOn an incredibly pivotal 3rd down and 6, a scenario that every football team has faced in some situation or another, Maryland made the extremely bold call to... run the ball. The play resulted in a 1 yard loss, and set up what would be a last-play winning drive for the visiting Illinois squad.\n\nIs there a method behind what some are calling Locksley's madness? Let's take a look at a number of plays in 3rd and 6 situations from the last 4+ years' worth of FBS plays, and see if there's something we can figure out.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(cfbfastR))\n\npbp <- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nthreeandsix <- pbp |> filter(down == 3) |> filter(distance == 6)\nthreeandsixruns <- threeandsix |> filter(play_type == \"Rush\")\nplaytypes <- threeandsix |> group_by(play_type) |> summarise(\n  instances = n()\n) |> arrange(desc(instances))\n```\n:::\n\n\n\nBelow, we can see the distribution of play outcomes for all plays run on 3rd Down with 6 yards to go:\n\n::: {.cell}\n\n```{.r .cell-code}\nplaytypes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 2\n   play_type                            instances\n   <chr>                                    <int>\n 1 Pass Reception                            3484\n 2 Pass Incompletion                         2859\n 3 Rush                                      2359\n 4 Penalty                                    813\n 5 Timeout                                    674\n 6 Sack                                       613\n 7 Passing Touchdown                          383\n 8 Interception Return                        182\n 9 Rushing Touchdown                          100\n10 Fumble Recovery (Opponent)                  83\n11 Fumble Recovery (Own)                       55\n12 Interception Return Touchdown               24\n13 Field Goal Good                             13\n14 Field Goal Missed                            3\n15 Fumble Return Touchdown                      3\n16 Punt                                         3\n17 Safety                                       2\n18 Blocked Field Goal                           1\n19 Fumble Recovery (Opponent) Touchdown         1\n```\n:::\n:::\n\nVery clearly, the overwhelming choice for offenses on 3rd and 6 is to pass the ball, with over half of all plays in this scenario being a pass, since 2019. For the purposes of this investigation, we're taking plays in isolation. For example, interceptions are not counted as Pass Incompletions, and fumbles after a rush or pass completion are counted as fumbles, not as both a Rush/Pass Reception AND fumble. With this knowledge in mind, let's move forward, and understand how many of these runs are actually successful in achieving a new set of downs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuccessRuns <- threeandsixruns |> filter(yards_gained >= 6)\nsuccessRuns <- successRuns |> group_by(play_type) |> summarise(instances=n())\nsuccessRuns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  play_type instances\n  <chr>         <int>\n1 Rush            871\n```\n:::\n:::\n\n\nSo then, out of 2,459 rushes run on 3rd and 6 in the last 4-and-change years in college football, just 971, or 39.5% of them, gain 6 or more than 6 yards.\n\nNOTE: The above calculation comes from 871 runs that gained 6 or more yards but did not score a touchdown, as well as 100 runs on 3rd and 6, which, logically, implies that they gained at least 6 yards.\n\nSo running on 3rd and 6 doesn't actually seem like the worst play in the world, as over 40% of those attempts actually end up getting the job (or more!) done.\n\nSo who are our most frequent users (or abusers?) of this play?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthreeandsixrunTeams <- threeandsixruns |> group_by(pos_team) |> summarise(instances = n()) |> arrange(desc(instances))\nthreeandsixrunTeams\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 261 × 2\n   pos_team         instances\n   <chr>                <int>\n 1 Navy                    49\n 2 Army                    42\n 3 Air Force               30\n 4 Georgia Southern        28\n 5 Baylor                  25\n 6 Oklahoma State          24\n 7 Kent State              23\n 8 Louisiana               23\n 9 New Mexico              23\n10 Arkansas                22\n# ℹ 251 more rows\n```\n:::\n:::\n\n\nUnsurprisingly, we see that the three service academies are the top 3 teams who choose to run on 3rd and 6. This tracks with the \"eye test\" that those 3 teams are VERY run heavy. Maryland, since 2019, sits at 40th place out of 331 tracked FBS teams, which is still significantly above the average, which maybe starts to point us towards the fact that this isn't out of the ordinary for Maryland\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthreeandsixUMD <- threeandsix |> group_by(pos_team, play_type) |> summarise(instances = n()) |> filter(pos_team == \"Maryland\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'pos_team'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nthreeandsixUMD\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n# Groups:   pos_team [1]\n   pos_team play_type                  instances\n   <chr>    <chr>                          <int>\n 1 Maryland Fumble Recovery (Opponent)         2\n 2 Maryland Interception Return                1\n 3 Maryland Pass Incompletion                 11\n 4 Maryland Pass Reception                    13\n 5 Maryland Passing Touchdown                  4\n 6 Maryland Penalty                            2\n 7 Maryland Rush                              15\n 8 Maryland Rushing Touchdown                  1\n 9 Maryland Sack                               4\n10 Maryland Timeout                            2\n```\n:::\n:::\n\nSpecifically looking at Maryland's 3rd and 6 data, it's easy to see that this is more of a surprise in THIS context. Maryland has 29 passing plays as compared to 16 rush plays, a 65-35 split in play calls for this down and distance situation.\n\nSo what was the logic going into this play call?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp1 <- threeandsix |> \n  filter(year==2023) |> \n  group_by(def_pos_team, play_type) |>\n  filter(yards_gained >= 6) |>\n  summarise(instances = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'def_pos_team'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nfinal1 <- temp1 |> \n  group_by(def_pos_team) |> \n  summarise(conversionsAllowed = sum(instances)) |> \n  arrange(desc(conversionsAllowed))\n\nfinal1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 241 × 2\n   def_pos_team  conversionsAllowed\n   <chr>                      <int>\n 1 Texas State                    8\n 2 Cal Poly                       7\n 3 Kent State                     7\n 4 South Florida                  7\n 5 Wyoming                        7\n 6 Alabama                        6\n 7 Baylor                         6\n 8 Florida State                  6\n 9 Illinois                       6\n10 Northern Iowa                  6\n# ℹ 231 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp2 <- threeandsixruns |> \n  filter(year==2023) |> \n  group_by(def_pos_team, play_type) |>\n  filter(yards_gained >= 6) |>\n  summarise(instances = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'def_pos_team'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nfinal2 <- temp2 |> \n  group_by(def_pos_team) |> \n  summarise(conversionsAllowedFromRun = sum(instances)) |> \n  arrange(desc(conversionsAllowedFromRun))\n\nfinal2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 101 × 2\n   def_pos_team  conversionsAllowedFromRun\n   <chr>                             <int>\n 1 Alabama                               4\n 2 Cal Poly                              3\n 3 Illinois                              3\n 4 Texas State                           3\n 5 Virginia Tech                         3\n 6 Akron                                 2\n 7 Baylor                                2\n 8 Bucknell                              2\n 9 Duquesne                              2\n10 Idaho                                 2\n# ℹ 91 more rows\n```\n:::\n:::\n\n\nHere's the logic at hand, or at least my best guess, given the data we have:\n\nSo far in 2023, as seen in the table above, the Illini defense has faced 3rd and 6 a total of six times. Of those 6 times, 50% of successful conversions they've allowed have come on the ground, via runs.\n\nDoes this justify what the average fan might call a \"boneheaded\" or \"stupid\" play? Perhaps not. At the very least, however, it provides us with a base on which we can make an educated guess to the question: \"Why did Locksley run in THAT situation?\"",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}