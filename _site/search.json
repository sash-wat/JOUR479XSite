[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "Method Behind the Madness? A Deep Dive into Maryland’s Playcalling Mindset",
    "section": "",
    "text": "Late in their Homecoming game on Saturday, October 14th, the Maryland Terrapins seemed poised to win what was already an overcomplicated affair. A team that was 5-1, against a struggling 2-4 conference rival, with Maryland looking to build back some confidence and momentum after a 20 point loss in Columbus against Ohio State.\nOn an incredibly pivotal 3rd down and 6, a scenario that every football team has faced in some situation or another, Maryland made the extremely bold call to… run the ball. The play resulted in a 1 yard loss, and set up what would be a last-play winning drive for the visiting Illinois squad.\nIs there a method behind what some are calling Locksley’s madness? Let’s take a look at a number of plays in 3rd and 6 situations from the last 4+ years’ worth of FBS plays, and see if there’s something we can figure out.\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(cfbfastR))\n\npbp &lt;- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))\n\n\n\n\nCode\nlibrary(ggplot2)\nthreeandsix &lt;- pbp |&gt; filter(down == 3) |&gt; filter(distance == 6)\nthreeandsixruns &lt;- threeandsix |&gt; filter(play_type == \"Rush\")\nplaytypes &lt;- threeandsix |&gt; group_by(play_type) |&gt; summarise(\n  instances = n()\n) |&gt; arrange(desc(instances))\n\n\nBelow, we can see the distribution of play outcomes for all plays run on 3rd Down with 6 yards to go:\n\n\nCode\nplaytypes\n\n\n# A tibble: 19 × 2\n   play_type                            instances\n   &lt;chr&gt;                                    &lt;int&gt;\n 1 Pass Reception                            3484\n 2 Pass Incompletion                         2859\n 3 Rush                                      2359\n 4 Penalty                                    813\n 5 Timeout                                    674\n 6 Sack                                       613\n 7 Passing Touchdown                          383\n 8 Interception Return                        182\n 9 Rushing Touchdown                          100\n10 Fumble Recovery (Opponent)                  83\n11 Fumble Recovery (Own)                       55\n12 Interception Return Touchdown               24\n13 Field Goal Good                             13\n14 Field Goal Missed                            3\n15 Fumble Return Touchdown                      3\n16 Punt                                         3\n17 Safety                                       2\n18 Blocked Field Goal                           1\n19 Fumble Recovery (Opponent) Touchdown         1\n\n\nVery clearly, the overwhelming choice for offenses on 3rd and 6 is to pass the ball, with over half of all plays in this scenario being a pass, since 2019. For the purposes of this investigation, we’re taking plays in isolation. For example, interceptions are not counted as Pass Incompletions, and fumbles after a rush or pass completion are counted as fumbles, not as both a Rush/Pass Reception AND fumble. With this knowledge in mind, let’s move forward, and understand how many of these runs are actually successful in achieving a new set of downs.\n\n\nCode\nsuccessRuns &lt;- threeandsixruns |&gt; filter(yards_gained &gt;= 6)\nsuccessRuns &lt;- successRuns |&gt; group_by(play_type) |&gt; summarise(instances=n())\nsuccessRuns\n\n\n# A tibble: 1 × 2\n  play_type instances\n  &lt;chr&gt;         &lt;int&gt;\n1 Rush            871\n\n\nSo then, out of 2,459 rushes run on 3rd and 6 in the last 4-and-change years in college football, just 971, or 39.5% of them, gain 6 or more than 6 yards.\nNOTE: The above calculation comes from 871 runs that gained 6 or more yards but did not score a touchdown, as well as 100 runs on 3rd and 6, which, logically, implies that they gained at least 6 yards.\nSo running on 3rd and 6 doesn’t actually seem like the worst play in the world, as over 40% of those attempts actually end up getting the job (or more!) done.\nSo who are our most frequent users (or abusers?) of this play?\n\n\nCode\nthreeandsixrunTeams &lt;- threeandsixruns |&gt; group_by(pos_team) |&gt; summarise(instances = n()) |&gt; arrange(desc(instances))\nthreeandsixrunTeams\n\n\n# A tibble: 261 × 2\n   pos_team         instances\n   &lt;chr&gt;                &lt;int&gt;\n 1 Navy                    49\n 2 Army                    42\n 3 Air Force               30\n 4 Georgia Southern        28\n 5 Baylor                  25\n 6 Oklahoma State          24\n 7 Kent State              23\n 8 Louisiana               23\n 9 New Mexico              23\n10 Arkansas                22\n# ℹ 251 more rows\n\n\nUnsurprisingly, we see that the three service academies are the top 3 teams who choose to run on 3rd and 6. This tracks with the “eye test” that those 3 teams are VERY run heavy. Maryland, since 2019, sits at 40th place out of 331 tracked FBS teams, which is still significantly above the average, which maybe starts to point us towards the fact that this isn’t out of the ordinary for Maryland\n\n\nCode\nthreeandsixUMD &lt;- threeandsix |&gt; group_by(pos_team, play_type) |&gt; summarise(instances = n()) |&gt; filter(pos_team == \"Maryland\")\n\n\n`summarise()` has grouped output by 'pos_team'. You can override using the\n`.groups` argument.\n\n\nCode\nthreeandsixUMD\n\n\n# A tibble: 10 × 3\n# Groups:   pos_team [1]\n   pos_team play_type                  instances\n   &lt;chr&gt;    &lt;chr&gt;                          &lt;int&gt;\n 1 Maryland Fumble Recovery (Opponent)         2\n 2 Maryland Interception Return                1\n 3 Maryland Pass Incompletion                 11\n 4 Maryland Pass Reception                    13\n 5 Maryland Passing Touchdown                  4\n 6 Maryland Penalty                            2\n 7 Maryland Rush                              15\n 8 Maryland Rushing Touchdown                  1\n 9 Maryland Sack                               4\n10 Maryland Timeout                            2\n\n\nSpecifically looking at Maryland’s 3rd and 6 data, it’s easy to see that this is more of a surprise in THIS context. Maryland has 29 passing plays as compared to 16 rush plays, a 65-35 split in play calls for this down and distance situation.\nSo what was the logic going into this play call?\n\n\nCode\ntemp1 &lt;- threeandsix |&gt; \n  filter(year==2023) |&gt; \n  group_by(def_pos_team, play_type) |&gt;\n  filter(yards_gained &gt;= 6) |&gt;\n  summarise(instances = n())\n\n\n`summarise()` has grouped output by 'def_pos_team'. You can override using the\n`.groups` argument.\n\n\nCode\nfinal1 &lt;- temp1 |&gt; \n  group_by(def_pos_team) |&gt; \n  summarise(conversionsAllowed = sum(instances)) |&gt; \n  arrange(desc(conversionsAllowed))\n\nfinal1\n\n\n# A tibble: 241 × 2\n   def_pos_team  conversionsAllowed\n   &lt;chr&gt;                      &lt;int&gt;\n 1 Texas State                    8\n 2 Cal Poly                       7\n 3 Kent State                     7\n 4 South Florida                  7\n 5 Wyoming                        7\n 6 Alabama                        6\n 7 Baylor                         6\n 8 Florida State                  6\n 9 Illinois                       6\n10 Northern Iowa                  6\n# ℹ 231 more rows\n\n\n\n\nCode\ntemp2 &lt;- threeandsixruns |&gt; \n  filter(year==2023) |&gt; \n  group_by(def_pos_team, play_type) |&gt;\n  filter(yards_gained &gt;= 6) |&gt;\n  summarise(instances = n())\n\n\n`summarise()` has grouped output by 'def_pos_team'. You can override using the\n`.groups` argument.\n\n\nCode\nfinal2 &lt;- temp2 |&gt; \n  group_by(def_pos_team) |&gt; \n  summarise(conversionsAllowedFromRun = sum(instances)) |&gt; \n  arrange(desc(conversionsAllowedFromRun))\n\nfinal2\n\n\n# A tibble: 101 × 2\n   def_pos_team  conversionsAllowedFromRun\n   &lt;chr&gt;                             &lt;int&gt;\n 1 Alabama                               4\n 2 Cal Poly                              3\n 3 Illinois                              3\n 4 Texas State                           3\n 5 Virginia Tech                         3\n 6 Akron                                 2\n 7 Baylor                                2\n 8 Bucknell                              2\n 9 Duquesne                              2\n10 Idaho                                 2\n# ℹ 91 more rows\n\n\nHere’s the logic at hand, or at least my best guess, given the data we have:\nSo far in 2023, as seen in the table above, the Illini defense has faced 3rd and 6 a total of six times. Of those 6 times, 50% of successful conversions they’ve allowed have come on the ground, via runs.\nDoes this justify what the average fan might call a “boneheaded” or “stupid” play? Perhaps not. At the very least, however, it provides us with a base on which we can make an educated guess to the question: “Why did Locksley run in THAT situation?”"
  },
  {
    "objectID": "posts/b1g-plays/index.html",
    "href": "posts/b1g-plays/index.html",
    "title": "Less is More? Big Ten Teams Run Less Plays, But Powerhouses Remain Unaffected",
    "section": "",
    "text": "The NCAA’s new clock rules in football were implemented with a view to shorten games and make the viewer experience more palatable. Have they done that? Let’s take a look within the context of the Big Ten:\n\n\nCode\nsuppressMessages(library(tidyverse))\n\n\n\n\nCode\nsuppressMessages(games2022 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\"))\nsuppressMessages(games2023 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\"))\n\nbig10 &lt;- c(\"Maryland Terrapins\", \"Illinois Fightning Illini\", \"Wisconsin Badgers\", \"Michigan State Spartans\", \"Michigan Wolverines\", \"Indiana Hoosiers\", \"Ohio State Buckeyes\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Nebraska Cornhuskers\", \"Northwestern Wildcats\", \"Purdue Boilermakers\")\n\nb10_games2022 &lt;- games2022 |&gt; filter(TeamFull %in% big10)\nb10_games2023 &lt;- games2023 |&gt; filter(TeamFull %in% big10)\n\ngames2022_playsPerGame &lt;- b10_games2022 |&gt; group_by(TeamFull) |&gt; summarize(avgOffPlays = sum(OffensivePlays)/n())\ngames2023_playsPerGame &lt;- b10_games2023 |&gt; group_by(TeamFull) |&gt; summarize(avgOffPlays = sum(OffensivePlays)/n())\n\ngames2022_playsPerGame &lt;- games2022_playsPerGame |&gt; arrange(desc(avgOffPlays))\n\nggplot() + \n  geom_bar(\n    data=games2022_playsPerGame, \n    aes(x=TeamFull, weight=avgOffPlays)\n  ) +\n  ylab(\"Offensive Plays Per Game\") +\n  xlab(\"Team\") +\n  ggtitle(\"2022 Purdue On Top, but Barely\")+\n  coord_flip() + \n  scale_x_discrete(limits = games2022_playsPerGame$TeamFull[order(games2022_playsPerGame$avgOffPlays)])\n\n\n\n\n\nLooking at the Big Ten teams in 2022, we can see that the perennial Big Ten powerhouses, like Ohio State and Penn State, weren’t necessarily the ones running the most offensive plays. The bar chart we’ve generated here indicates that Northwestern and Purdue, teams that aren’t known for “running” the Big ten like OSU and Penn State are, might suffer from some sort of offensive inefficiency.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=games2023_playsPerGame, \n    aes(x=TeamFull, weight=avgOffPlays)\n  ) +\n  ylab(\"Offensive Plays Per Game\") +\n  xlab(\"Team\") +\n  ggtitle(\"Penn State Surges Ahead This Year\")+\n  coord_flip() +\n  scale_x_discrete(limits = games2023_playsPerGame$TeamFull[order(games2023_playsPerGame$avgOffPlays)])\n\n\n\n\n\nOnce again, in 2023, Purdue is amongst the top teams in terms of Offensive Plays run per game, and sit at a measly 2-4 on the season.\n\n\nCode\ndifferentials &lt;- data.frame(\n  Team = games2022_playsPerGame$TeamFull,\n  playsPerGame2023 = games2023_playsPerGame$avgOffPlays,\n  playsPerGame2022 = games2022_playsPerGame$avgOffPlays\n)\ndifferentials &lt;- differentials |&gt; mutate(Differential = differentials$playsPerGame2023 - differentials$playsPerGame2022)\n\ndifferentials |&gt; arrange(desc(Differential))\n\n\n                       Team playsPerGame2023 playsPerGame2022 Differential\n1         Wisconsin Badgers         80.60000         63.61538   16.9846154\n2             Iowa Hawkeyes         71.40000         59.38462   12.0153846\n3   Rutgers Scarlet Knights         73.00000         63.50000    9.5000000\n4  Minnesota Golden Gophers         66.50000         66.30769    0.1923077\n5      Nebraska Cornhuskers         62.16667         63.41667   -1.2500000\n6   Michigan State Spartans         62.80000         64.41667   -1.6166667\n7        Maryland Terrapins         67.60000         70.38462   -2.7846154\n8          Indiana Hoosiers         68.33333         73.25000   -4.9166667\n9       Ohio State Buckeyes         62.00000         67.38462   -5.3846154\n10      Michigan Wolverines         63.66667         69.28571   -5.6190476\n11      Purdue Boilermakers         66.40000         74.92857   -8.5285714\n12 Penn State Nittany Lions         59.66667         70.07692  -10.4102564\n13    Northwestern Wildcats         55.50000         73.83333  -18.3333333\n\n\nLooking at the differentials between seasons, the new clock rule intended to shorten games seems to be doing just that – in the Big Ten at least. Of the Big Ten’s teams, just 3 have logged an increased in an average number of plays run per game. Those teams, Penn State, Wisconsin, and Michigan State, are 5-0, 4-1, and 2-3, respectively, indicating that there’s something missing here. What are Penn State and Wisconsin doing differently to only have one loss between them?\n(The Badgers’ one loss was to #19 Washington State by 9 points, a result of falling behind early on in what was otherwise an even matchup on paper)"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "TESTING TESTING TESTING"
  },
  {
    "objectID": "posts/hello-world-intro/index.html",
    "href": "posts/hello-world-intro/index.html",
    "title": "Welcome to my blog!",
    "section": "",
    "text": "This is the best thing I’ve probably ever written. And that’s saying a lot."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sashvenk479xblog",
    "section": "",
    "text": "Method Behind the Madness? A Deep Dive into Maryland’s Playcalling Mindset\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nSashwat Venkatesh\n\n\n\n\n\n\n  \n\n\n\n\nLess is More? Big Ten Teams Run Less Plays, But Powerhouses Remain Unaffected\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSashwat Venkatesh\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 8, 2023\n\n\nSashwat Venkatesh\n\n\n\n\n\n\n  \n\n\n\n\nWelcome to my blog!\n\n\n\n\n\n\n\nwelcome\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nSashwat Venkatesh\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]